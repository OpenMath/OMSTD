set -e

# http://saxon.sourceforge.net/
if [ -f saxon9he.jar ]; then
export XSLT="java -jar ../saxon9he.jar -versionmsg:off "
else
export XSLT="java -jar /tmp/jars/saxon9he.jar -versionmsg:off "
fi



# https://code.google.com/archive/p/jing-trang/downloads
if [ -f saxon9he.jar ]; then
export TRANG="java -jar ../trang.jar "
else
    export TRANG="java -jar /tmp/jars/trang.jar "
fi

if [ "$1" == "final" ]
then
    DRAFT=no
    TARGET=om20-2017-12-01
else
    DRAFT=yes
    TARGET=om20-editors-draft
fi


case "$TRAVIS_COMMIT_MESSAGE" in 
\[ci\ final\]*)
    DRAFT=no
    TARGET=om20-2017-12-01
esac


echo TARGET=$TARGET


DATE=`date "+%Y-%m-%d"`

if [ ! -d build ] ; then
echo "make build"
mkdir build 2> /dev/null
else
echo "dont make build"
fi

cp support/rnc2dbk  *.rnc xsl/*.xsl png/*.png *.ocd *.sts *.cdg build
cp openmath.cls build

cd build

echo RNC/xml
for i in omcd2.rnc omcdsig2.rnc openmath2.rnc omcdgroup2.rnc
do
echo $i
perl rnc2dbk $i > ${i%%.rnc}rnc.xml
done


# openmath2.rnc has to be last
echo RNG
for i in omcd2.rnc omcdsig2.rnc  omcdgroup2.rnc openmath2.rnc
do
echo $i
$TRANG  $i ${i%%rnc}rng
done

# openmath2.rnc has to be last
echo XSD
for i in omcd2.rnc omcdsig2.rnc omcdgroup2.rnc  openmath2.rnc
do
echo $i
$TRANG  $i ${i%%rnc}xsd
done

>trang.txt
echo DTD
for i in openmath2.rnc
do
echo $i
sed -e "s/attvar =[^}]*}/attvar = OMATTR/" \
    -e "s/notom =.*$//" \
    -e "s/^.*element \*.*$//" \
    -e "s/ (omel|notom)\*/omel/" \
    -e "s/^.* text.$//" \
    -e "s/{pattern.*}}/}/" \
    -e "s/include .openmath2.rnc. {.*}/# OMDTD/" \
        $i >tmp.rnc

$TRANG  tmp.rnc tmp.dtd 2>> trang.txt
 
 sed -e "s/OMFOREIGN .*>/OMFOREIGN ANY>/" \
     -e "s/:*ns1:*//g" \
     -e "s/\# OMDTD/<!ENTITY % omdtd SYSTEM \"openmath2.dtd\"> %omdtd;/"\
        tmp.dtd > ${i%%rnc}dtd
 sed -e "s/</\&lt;/g" ${i%%rnc}dtd > ${i%%.rnc}dtd.xml
done

for i in omcd2.rnc 
do
echo DTD
echo $i
sed -e  "s/| OMOBJ//" \
    -e "s/OMOBJ/text/" \
    -e "s/include .openmath2.rnc. {.*}/# OMDTD/" \
    -e "s/\(CDRevision[^,]*\)[)],/\\1)+,/" \
    -e "s/\(Description\)[)],/\\1)+,/" \
    -e "s/\(Role\)[?]/\\1/" \
    -e "s/ &/ |/g" \
        $i >tmp.rnc

$TRANG  tmp.rnc tmp.dtd  2>> trang.txt
 

 sed -e "s/text-or-om \"(#PCDATA/text-or-om \"(#PCDATA|OMOBJ/" \
     -e "s/FMP (#PCDATA)/FMP (OMOBJ)/" \
     -e "s/:ns1//g" \
     -e "s/ns1://g" \
     -e "s/<!-- OMDTD -->/<!ENTITY % omdtd SYSTEM \"openmath2.dtd\"> %omdtd;/"\
        tmp.dtd > ${i%%rnc}dtd
 sed -e "s/</\&lt;/g" ${i%%rnc}dtd > ${i%%.rnc}dtd.xml


done

echo DTD
echo omcdgroup2.rnc
$TRANG  omcdgroup2.rnc omcdgroup2.dtd 2>> trang.txt

for i in  omcdsig2.rnc
do
echo DTD
 echo $i
 sed -e  "s/| OMOBJ//" \
     -e "s/OMOBJ/text/" \
     -e "s/include .openmath2.rnc. {.*}/# OMDTD/" \
     -e "s/(CDSReviewDate[?] & CDSStatus)/((CDSReviewDate,CDSStatus)|(CDSStatus,CDSReviewDate?))/g" \
         $i >tmp.rnc


 $TRANG  tmp.rnc tmp.dtd  2>> trang.txt


 sed -e "s/Signature ..#PCDATA..../Signature (OMOBJ)/" \
     -e "s/:ns1//g" \
     -e "s/ns1://g" \
     -e "s/<!-- OMDTD -->/<!ENTITY % omdtd SYSTEM \"openmath2.dtd\"> %omdtd;/"\
        tmp.dtd > ${i%%rnc}dtd
 sed -e "s/</\&lt;/g" ${i%%rnc}dtd > ${i%%.rnc}dtd.xml


done



echo single page html5
$XSLT  -strip:none  -dtd:on  ../omstd20.xml omstd20.xsl html5=yes prefix=omstd20 draft=$DRAFT date=$DATE

echo html diff version
$XSLT -strip:none ../omstd20.xml omstd20.xsl showdiffs=true html5=yes prefix=omstd20-diff  draft=$DRAFT date=$DATE

# old pmathml.xsl rendering doesn't work in current browsers
# echo html
# $XSLT -dtd:on  -o:omstd20html.xml ../omstd20.xml omstd20.xsl

# currently doesn't work and probably not required
# echo chunked html
# $XSLT   ../omstd20.xml omstd20.xsl chunk="true"

# old pmathml.xsl rendering doesn't work in current browsers
# echo html-diff
# $XSLT  -o:omstd20html-diff.xml ../omstd20.xml omstd20.xsl showdiffs=true


echo tex
export SOURCE_DATE_EPOCH=1498228223 # 2017/06/23  date +'%s'
export FORCE_SOURCE_DATE=1
export SOURCE_DATE_EPOCH_TEX_PRIMITIVES=1 # old version

$XSLT -strip:none -o:omstd20.tex ../omstd20.xml omstd20tex.xsl  draft=$DRAFT date=$DATE
echo tex-diff
$XSLT -strip:none -o:omstd20-diff.tex ../omstd20.xml omstd20tex.xsl showdiffs=true draft=$DRAFT date=$DATE
export PATH=/tmp/texlive/bin/x86_64-linux:$PATH

echo pdf

pdflatex \\batchmode \\input omstd20.tex
if (grep -i rerun omstd20.log)
  then
  pdflatex \\batchmode \\input omstd20.tex
  if (grep -i rerun omstd20.log)
    then 
    pdflatex \\batchmode \\input omstd20.tex
    if (grep -i rerun omstd20.log)
      then
      pdflatex \\batchmode \\input omstd20.tex
    fi
  fi
fi

echo pdf-diff
pdflatex \\batchmode \\input omstd20-diff.tex
if (grep -i rerun omstd20-diff.log)
  then
  pdflatex \\batchmode \\input omstd20-diff.tex
  if (grep -i rerun omstd20-diff.log)
    then 
    pdflatex \\batchmode \\input omstd20-diff.tex
    if (grep -i rerun omstd20-diff.log)
      then
      pdflatex \\batchmode \\input omstd20-diff.tex
    fi
  fi
fi


echo zip
rm tmp.*
zip -q om20.zip omstd*.html o*.xml *.dtd [opv][me]*.xsl *.rnc *.rng *.xsd o*.pdf *.png *.ocd run docbook

if [ -d "../../OpenMath.github.io/standard/$TARGET" ]
   then
       echo copying documents to ../OpenMath.github.io/standard/om20-editors-draft
       cp omstd20.html omstd20-diff.html omstd20.pdf omstd20-diff.pdf \
	  ../../OpenMath.github.io/standard/$TARGET
else

if [ "$TRAVIS" = "true" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ]  && [ "$TRAVIS_BRANCH" = "master" ]; then
   echo "travis job push to om website"
   	rm -rf OpenMath.github.io
	echo clone
	git config --global user.email "dpcarlisle@gmail.com"
	git config --global user.name "Travis CI"
	git config --global push.default simple

	git clone https://$ghauth@github.com/OpenMath/OpenMath.github.io.git
	cp omstd20.html omstd20-diff.html omstd20.pdf omstd20-diff.pdf \
	   OpenMath.github.io/standard/$TARGET
	cd OpenMath.github.io
	git commit -a -m "from travis ci: $TRAVIS_COMMIT_MESSAGE" || echo no changes
	git push
	
else
    echo skipping copying to website
fi
fi

